""" Sole access point to PanDB database (DataFrame) object """__all__ = ["PanDB"]from dbmaster import MasterPersistfrom dbbase import MusicDBDir, MusicDBData################################################################################ Sole access point to PanDB database (DataFrame) object###############################################################################class PanDB:    def __init__(self, **kwargs):        verbose = kwargs.get('verbose', False)        pdbPath = MusicDBDir(MasterPersist().getPanDBPath())        # create MusicDBData object for the PanDB DataFrame        self.data = {}        self.addData("", MusicDBData(path=pdbPath, fname="PanDB"), fname=True)                if verbose:            print("PanDB()")            print(f"{'  ==> PanDB Dir:': <18}{pdbPath}")            print(f"{'  ==> PanDB File:': <18}{self.getFilename()}")            def addData(self, key, mdbDataIO, fname=False):        exec("self.get{0}Data  = mdbDataIO.get".format(key))        exec("self.save{0}Data = mdbDataIO.save".format(key))        if fname:            exec("self.get{0}Filename  = mdbDataIO.getFilename".format(key))        if self.data.get(key) is None:            self.data[key] = mdbDataIO